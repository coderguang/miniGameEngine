//******************************************
// generated by royalchen's csgl tools
// email:royalchen@royalchen.com 
// FAQ:www.royalchen.com
// ******************************************

import {SRMICall} from '../engine/rmi/CRmiDef'
import {CSerializeStream} from '../engine/serializeStream/CSerializeStream'
import {CRpcHelper} from '../engine/rmi/CRpcHelper'
import {CRMIProxyCallBackObject} from '../engine/rmi/CRmiObject'
import {STestStruct} from 'TestStruct'

if(typeof ETest == "undefined") {
	var ETest={};
	ETest.ETestOne = 1;
	ETest.ETestTwo = 4;
	ETest.ETestThree = 5;
};

class STest{
	//props
	a;
	b;
	str;
	tt;
	ib;
	hss;
	il;
	is;

	constructor(){
		this._csg_init();
	}
	_csg_init(){
		this.a=0;
		this.b=false;
		this.str="";
		this.tt=new STestStruct();
		this.ib=new Array();
		this.hss=new Array();
		this.il=new Array();
		this.is=new Array();
	}
	_csg_read(__is){
		this.a=__is.readInt();
		this.b=__is.readBoolean();
		this.str=__is.readString();
		this.tt._csg_read(__is);
		this.ib=__is.readIntSeq();
		this.hss=this._csg_read__STL_TYPE_ONE__Struct__vector__STestStruct__hss__Serialize(__is);
		this.il=__is.readIntSeq();
		this.is=__is.readStringSeq();
	}
	_csg_write(__os){
		__os.writeInt(this.a);
		__os.writeBoolean(this.b);
		__os.writeString(this.str);
		this.tt._csg_write(__os);
		__os.writeIntSeq(this.ib);
		this._csg_write__STL_TYPE_ONE__Struct__vector__STestStruct__hss__Serialize(__os,this.hss);
		__os.writeIntSeq(this.il);
		__os.writeStringSeq(this.is);
	}
	getType(){
		return 1;
	}
	clone(){
		return new STest();
	}
	_csg_read__STL_TYPE_ONE__Struct__vector__STestStruct__hss__Serialize(__is)
	{
		let size=__is.readSizeInt();
		let data=new Array();
		for(let i=0;i<size;i++)
		{
			let val=new STestStruct();
			val._csg_read(__is);
			data.push_back(val);
		}
		return data;
	}

	_csg_write__STL_TYPE_ONE__Struct__vector__STestStruct__hss__Serialize(__os,data)
	{
		let size=data.size;
		__os.writeSizeInt(size);
		for(let i=0;i<size;i++)
		{
			data[i]._csg_write(__os);
		}
	}

}

class STestMap{
	//props
	a;
	ii;
	il;
	ss;
	iff;
	mis;
	mss;
	msstring;

	constructor(){
		this._csg_init();
	}
	_csg_init(){
		this.a=0;
		this.ii=new Map();
		this.il=new Map();
		this.ss=new Map();
		this.iff=new Map();
		this.mis=new Map();
		this.mss=new Map();
		this.msstring=new Map();
	}
	_csg_read(__is){
		this.a=__is.readInt();
		this.ii=this._csg_read__STL_TYPE_DOUBLE__Struct__map__int__int__ii__Serialize(__is);
		this.il=this._csg_read__STL_TYPE_DOUBLE__Struct__map__int__double__il__Serialize(__is);
		this.ss=this._csg_read__STL_TYPE_DOUBLE__Struct__map__string__string__ss__Serialize(__is);
		this.iff=this._csg_read__STL_TYPE_DOUBLE__Struct__map__int__float__iff__Serialize(__is);
		this.mis=this._csg_read__STL_TYPE_DOUBLE__Struct__map__int__STestStruct__mis__Serialize(__is);
		this.mss=this._csg_read__STL_TYPE_DOUBLE__Struct__map__STestStruct__STest__mss__Serialize(__is);
		this.msstring=this._csg_read__STL_TYPE_DOUBLE__Struct__map__STestStruct__string__msstring__Serialize(__is);
	}
	_csg_write(__os){
		__os.writeInt(this.a);
		this._csg_write__STL_TYPE_DOUBLE__Struct__map__int__int__ii__Serialize(__os,this.ii);
		this._csg_write__STL_TYPE_DOUBLE__Struct__map__int__double__il__Serialize(__os,this.il);
		this._csg_write__STL_TYPE_DOUBLE__Struct__map__string__string__ss__Serialize(__os,this.ss);
		this._csg_write__STL_TYPE_DOUBLE__Struct__map__int__float__iff__Serialize(__os,this.iff);
		this._csg_write__STL_TYPE_DOUBLE__Struct__map__int__STestStruct__mis__Serialize(__os,this.mis);
		this._csg_write__STL_TYPE_DOUBLE__Struct__map__STestStruct__STest__mss__Serialize(__os,this.mss);
		this._csg_write__STL_TYPE_DOUBLE__Struct__map__STestStruct__string__msstring__Serialize(__os,this.msstring);
	}
	getType(){
		return 6;
	}
	clone(){
		return new STestMap();
	}
	_csg_read__STL_TYPE_DOUBLE__Struct__map__int__int__ii__Serialize(__is){
		let size=__is.readSizeInt();
		let data=new Map();
		for(let i=0;i<size;i++){
			let key=__is.readInt();
			let val=__is.readInt();
			data[key]=val;
		}
		return data;
	}
	_csg_write__STL_TYPE_DOUBLE__Struct__map__int__int__ii__Serialize(__os,data)
	{
		let size=Object.keys(data).length;
		__os.writeSizeInt(size);
		for(let x in data)
		{
			__os.writeInt(x);
			__os.writeInt(data[x]);
		}
	}
	_csg_read__STL_TYPE_DOUBLE__Struct__map__int__double__il__Serialize(__is){
		let size=__is.readSizeInt();
		let data=new Map();
		for(let i=0;i<size;i++){
			let key=__is.readInt();
			let val=__is.readDouble();
			data[key]=val;
		}
		return data;
	}
	_csg_write__STL_TYPE_DOUBLE__Struct__map__int__double__il__Serialize(__os,data)
	{
		let size=Object.keys(data).length;
		__os.writeSizeInt(size);
		for(let x in data)
		{
			__os.writeInt(x);
			__os.writeDouble(data[x]);
		}
	}
	_csg_read__STL_TYPE_DOUBLE__Struct__map__string__string__ss__Serialize(__is){
		let size=__is.readSizeInt();
		let data=new Map();
		for(let i=0;i<size;i++){
			let key=__is.readString();
			let val=__is.readString();
			data[key]=val;
		}
		return data;
	}
	_csg_write__STL_TYPE_DOUBLE__Struct__map__string__string__ss__Serialize(__os,data)
	{
		let size=Object.keys(data).length;
		__os.writeSizeInt(size);
		for(let x in data)
		{
			__os.writeString(x);
			__os.writeString(data[x]);
		}
	}
	_csg_read__STL_TYPE_DOUBLE__Struct__map__int__float__iff__Serialize(__is){
		let size=__is.readSizeInt();
		let data=new Map();
		for(let i=0;i<size;i++){
			let key=__is.readInt();
			let val=__is.readFloat();
			data[key]=val;
		}
		return data;
	}
	_csg_write__STL_TYPE_DOUBLE__Struct__map__int__float__iff__Serialize(__os,data)
	{
		let size=Object.keys(data).length;
		__os.writeSizeInt(size);
		for(let x in data)
		{
			__os.writeInt(x);
			__os.writeFloat(data[x]);
		}
	}
	_csg_read__STL_TYPE_DOUBLE__Struct__map__int__STestStruct__mis__Serialize(__is){
		let size=__is.readSizeInt();
		let data=new Map();
		for(let i=0;i<size;i++){
			let key=__is.readInt();
			let val=new STestStruct();
			val._csg_read(__is);
			data[key]=val;
		}
		return data;
	}
	_csg_write__STL_TYPE_DOUBLE__Struct__map__int__STestStruct__mis__Serialize(__os,data)
	{
		let size=Object.keys(data).length;
		__os.writeSizeInt(size);
		for(let x in data)
		{
			__os.writeInt(x);
			data[x]._csg_write(__os);
		}
	}
	_csg_read__STL_TYPE_DOUBLE__Struct__map__STestStruct__STest__mss__Serialize(__is){
		let size=__is.readSizeInt();
		let data=new Map();
		for(let i=0;i<size;i++){
			let key=new STestStruct();
			key._csg_read(__is);
			let val=new STest();
			val._csg_read(__is);
			data[key]=val;
		}
		return data;
	}
	_csg_write__STL_TYPE_DOUBLE__Struct__map__STestStruct__STest__mss__Serialize(__os,data)
	{
		let size=Object.keys(data).length;
		__os.writeSizeInt(size);
		for(let x in data)
		{
			x._csg_write(__os);
			data[x]._csg_write(__os);
		}
	}
	_csg_read__STL_TYPE_DOUBLE__Struct__map__STestStruct__string__msstring__Serialize(__is){
		let size=__is.readSizeInt();
		let data=new Map();
		for(let i=0;i<size;i++){
			let key=new STestStruct();
			key._csg_read(__is);
			let val=__is.readString();
			data[key]=val;
		}
		return data;
	}
	_csg_write__STL_TYPE_DOUBLE__Struct__map__STestStruct__string__msstring__Serialize(__os,data)
	{
		let size=Object.keys(data).length;
		__os.writeSizeInt(size);
		for(let x in data)
		{
			x._csg_write(__os);
			__os.writeString(data[x]);
		}
	}
}

class SScapyTest{
	//props
	str;

	constructor(){
		this._csg_init();
	}
	_csg_init(){
		this.str="";
	}
	_csg_read(__is){
		this.str=__is.readString();
	}
	_csg_write(__os){
		__os.writeString(this.str);
	}
	getType(){
		return 150;
	}
	clone(){
		return new SScapyTest();
	}
}


class CCli_ITest_t1_callBack
{
	_successFunc;
	_failFunc;
 	constructor(successFunc,failFunc){
		this._successFunc=successFunc;
		this._failFunc=failFunc;
	}
	__exception(__is)
	{
		let ex=__is.readException();
		this._failFunc(ex);
	}
	__response(__is)
	{
		this._successFunc();
	}
}

class CCli_ITest_t2_callBack
{
	_successFunc;
	_failFunc;
 	constructor(successFunc,failFunc){
		this._successFunc=successFunc;
		this._failFunc=failFunc;
	}
	__exception(__is)
	{
		let ex=__is.readException();
		this._failFunc(ex);
	}
	__response(__is)
	{
		this._successFunc();
	}
}

class CCli_ITest_t3_callBack
{
	_successFunc;
	_failFunc;
 	constructor(successFunc,failFunc){
		this._successFunc=successFunc;
		this._failFunc=failFunc;
	}
	__exception(__is)
	{
		let ex=__is.readException();
		this._failFunc(ex);
	}
	__response(__is)
	{
		let b=__is.readBoolean();
		let os=__is.readString();
		this._successFunc(b,os);
	}
}

class CCli_ITest_t4_callBack
{
	_successFunc;
	_failFunc;
 	constructor(successFunc,failFunc){
		this._successFunc=successFunc;
		this._failFunc=failFunc;
	}
	__exception(__is)
	{
		let ex=__is.readException();
		this._failFunc(ex);
	}
	__response(__is)
	{
		let os=new STestMap();
		os._csg_read(__is);
		this._successFunc(os);
	}
}

class CCli_ITest_t5_callBack
{
	_successFunc;
	_failFunc;
 	constructor(successFunc,failFunc){
		this._successFunc=successFunc;
		this._failFunc=failFunc;
	}
	__exception(__is)
	{
		let ex=__is.readException();
		this._failFunc(ex);
	}
	__response(__is)
	{
		let vl=__is.readIntSeq();
		this._successFunc(vl);
	}
}

class CCli_ITest_t6_callBack
{
	_successFunc;
	_failFunc;
 	constructor(successFunc,failFunc){
		this._successFunc=successFunc;
		this._failFunc=failFunc;
	}
	__exception(__is)
	{
		let ex=__is.readException();
		this._failFunc(ex);
	}
	__response(__is)
	{
		let vl=this._csg_read__STL_TYPE_DOUBLE__Interface_CCli__Read__ITest__t6__map__STest__int__vl(__is);
		this._successFunc(vl);
	}
	_csg_read__STL_TYPE_DOUBLE__Interface_CCli__Read__ITest__t6__map__STest__int__vl(__is){
		let size=__is.readSizeInt();
		let data=new Map();
		for(let i=0;i<size;i++){
			let key=new STest();
			key._csg_read(__is);
			let val=__is.readInt();
			data[key]=val;
		}
		return data;
	}
}

class CCli_ITest_t7_callBack
{
	_successFunc;
	_failFunc;
 	constructor(successFunc,failFunc){
		this._successFunc=successFunc;
		this._failFunc=failFunc;
	}
	__exception(__is)
	{
		let ex=__is.readException();
		this._failFunc(ex);
	}
	__response(__is)
	{
		let ot=new STestStruct();
		ot._csg_read(__is);
		this._successFunc(ot);
	}
}


class ITest
{
	constructor(){
	}

	t1_async(session,cb){
		let call=new SRMICall();
		call.rpcId=11;
		let __os=new CSerializeStream();
		let objectBind;
		CRpcHelper.prepareToCall(session,__os,call,cb,objectBind);
		__os.setUseBitMark(true);
		CRpcHelper.toCall(session,__os,objectBind);
	}

	t2_async(session,a,s,cb){
		let call=new SRMICall();
		call.rpcId=12;
		let __os=new CSerializeStream();
		let objectBind;
		CRpcHelper.prepareToCall(session,__os,call,cb,objectBind);
		__os.setUseBitMark(true);
		__os.writeInt(a);
		__os.writeString(s);
		CRpcHelper.toCall(session,__os,objectBind);
	}

	t3_async(session,a,s,cb){
		let call=new SRMICall();
		call.rpcId=13;
		let __os=new CSerializeStream();
		let objectBind;
		CRpcHelper.prepareToCall(session,__os,call,cb,objectBind);
		__os.setUseBitMark(true);
		__os.writeInt(a);
		__os.writeString(s);
		CRpcHelper.toCall(session,__os,objectBind);
	}

	t4_async(session,t,cb){
		let call=new SRMICall();
		call.rpcId=14;
		let __os=new CSerializeStream();
		let objectBind;
		CRpcHelper.prepareToCall(session,__os,call,cb,objectBind);
		__os.setUseBitMark(true);
		t._csg_write(__os);
		CRpcHelper.toCall(session,__os,objectBind);
	}

	t5_async(session,v,cb){
		let call=new SRMICall();
		call.rpcId=15;
		let __os=new CSerializeStream();
		let objectBind;
		CRpcHelper.prepareToCall(session,__os,call,cb,objectBind);
		__os.setUseBitMark(true);
		this.__STL_TYPE_ONE__Interface_CCli__Write__ITest__t5__vector__STest____v(__os,v);
		CRpcHelper.toCall(session,__os,objectBind);
	}

	t6_async(session,mss,cb){
		let call=new SRMICall();
		call.rpcId=16;
		let __os=new CSerializeStream();
		let objectBind;
		CRpcHelper.prepareToCall(session,__os,call,cb,objectBind);
		__os.setUseBitMark(true);
		this.__STL_TYPE_DOUBLE__Interface_CCli__Write__ITest__t6__map__string__STest__mss(__os,mss);
		CRpcHelper.toCall(session,__os,objectBind);
	}

	t7_async(session,a,t,cb){
		let call=new SRMICall();
		call.rpcId=17;
		let __os=new CSerializeStream();
		let objectBind;
		CRpcHelper.prepareToCall(session,__os,call,cb,objectBind);
		__os.setUseBitMark(true);
		__os.writeInt(a);
		t._csg_write(__os);
		CRpcHelper.toCall(session,__os,objectBind);
	}

	__STL_TYPE_ONE__Interface_CCli__Write__ITest__t5__vector__STest____v(__os,data){
			let size=data.length;
			__os.writeSizeInt(size);
			for(let i=0;i<size;i++){
				data[i]._csg_write(__os);
			}
	}

	__STL_TYPE_DOUBLE__Interface_CCli__Write__ITest__t6__map__string__STest__mss(__os,data){
		let size=Object.keys(data).length;
		__os.writeSizeInt(size);
		for(let x in data){
			__os.writeString(x);
			data[x]._csg_write(__os);
		}
	}

}




export {ETest}
export {STest}
export {STestMap}
export {SScapyTest}
export {ITest}
export {CCli_ITest_t1_callBack}
export {CCli_ITest_t2_callBack}
export {CCli_ITest_t3_callBack}
export {CCli_ITest_t4_callBack}
export {CCli_ITest_t5_callBack}
export {CCli_ITest_t6_callBack}
export {CCli_ITest_t7_callBack}



//import {ETest,STest,STestMap,SScapyTest,ITest,CCli_ITest_t1_callBack,CCli_ITest_t2_callBack,CCli_ITest_t3_callBack,CCli_ITest_t4_callBack,CCli_ITest_t5_callBack,CCli_ITest_t6_callBack,CCli_ITest_t7_callBack,
