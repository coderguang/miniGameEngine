#set project dir


#set build param by command params 

LIB_NAME:= 
CC	:= 
CFLAG	:= 
DEP_CFLAG :=
CCEX	:=
CFLAGEX	:=

################################################don't edit next code ###########

PROJECT_DIR	:=$(shell pwd)

#set file dir
SEARCH_FILE	= $(wildcard $(subdir)/*.h $(subdir)/*.cpp $(subdir)/*.c)
CUR_SRC_DIR	= $(shell ls -AxR $(PROJECT_DIR)|grep ":"|tr -d ':')
CUR_SRC 	:= $(foreach subdir,$(CUR_SRC_DIR),$(SEARCH_FILE))
CUR_CPP 	:= $(filter %.cpp, $(CUR_SRC))
CUR_C		:= $(filter %.c,$(CUR_SRC))


#set obj dir
CUR_OBJ		:=$(strip $(CUR_CPP:.cpp=.o))
CUR_OBJ_EX	:=$(patsubst %.o,%,$(CUR_OBJ))

CUR_OBJ_C	:=$(strip $(CUR_C:.c=.o))
CUR_OBJ_C_EX:=$(patsubst %.o,%,$(CUR_OBJ_C))


-include $(CUR_CPP:.cpp=.d)
-include $(CUR_C:.c=.d)


define build_obj
$1:$2 
	$(CC) -c $(CFLAG) -o $1 $2
endef

define build_objc
$1:$2 
	$(CCEX) -c $(CFLAGEX) -o $1 $2
endef

$(foreach tmp,$(CUR_OBJ_EX),$(eval $(call build_obj,$(tmp).o,$(tmp).cpp)))

$(foreach tmp,$(CUR_OBJ_C_EX),$(eval $(call build_objc,$(tmp).o,$(tmp).c)))


.PHONY:all
all:$(LIB_NAME)


$(LIB_NAME):$(CUR_OBJ) $(CUR_OBJ_C)
	ar cr $(PROJECT_LIB_DIR)$@ $^


.PHONY:clean
clean :
	@$(RM) -rf $(CUR_OBJ) $(PROJECT_LIB_DIR)$(LIB_NAME) $(CUR_DEP)


